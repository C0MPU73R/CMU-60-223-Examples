#N canvas 13 22 1263 986 10;
#X obj 12 12 cnv 15 800 180 empty empty state_machine_demo 20 12 0
14 -204800 -66577 0;
#X text 198 13 Demonstrate the use of a state machine to control behavior
of a simulated motor and sensor system.;
#X obj 89 294 one_axis_world_sim;
#X obj 87 259 r \$0-motor-commands;
#X obj 72 621 -;
#X obj 72 556 t f f b;
#X obj 254 637 signal_plot;
#X obj 257 338 signal_plot;
#X obj 88 594 float 0;
#X obj 99 406 float 0;
#X obj 74 431 -;
#X obj 74 461 * 0.2;
#X obj 105 493 +;
#X text 46 355 first-order smoothing filter;
#X obj 74 377 t f b;
#X text 304 320 raw sensor signal;
#X obj 116 684 expr 0.5 + (5 * $f1);
#X text 289 618 estimated sensor derivative;
#X text 134 701 scaling for plot;
#X obj 162 1030 s \$0-sensor-events;
#X symbolatom 161 999 10 0 0 0 - - -;
#X obj 48 912 bang;
#X obj 168 908 bang;
#X obj 259 909 bang;
#X obj 49 939 symbol decreasing;
#X obj 166 938 symbol steady;
#X obj 259 937 symbol increasing;
#X obj 81 837 moses -0.01;
#X obj 179 873 moses 0.01;
#X text 174 842 quantize sensor input into categories;
#X obj 596 320 r \$0-sensor-events;
#X obj 736 991 s \$0-motor-commands;
#X text 132 552 estimate of sensor signal derivative using single-sample
finite difference;
#X obj 647 375 tgl 25 0 empty empty empty 17 7 0 10 -4160 -262144 -262144
1 1;
#X obj 596 412 spigot;
#X obj 627 787 tgl 25 0 empty empty empty 17 7 0 10 -4160 -262144 -262144
0 1;
#X obj 596 909 spigot;
#X text 678 381 Sleep State;
#X obj 596 485 select 0;
#X obj 596 508 t b b;
#X text 658 793 Forward State;
#X obj 695 489 s \$0-motor-commands;
#X msg 695 462 stop;
#X obj 596 437 t b b;
#X obj 598 672 r \$0-sensor-events;
#X obj 596 936 t s b;
#X msg 736 960 forward;
#X obj 575 1014 t b b;
#X obj 575 970 select decreasing steady;
#X obj 658 1013 t b b;
#X obj 596 536 random 2;
#X obj 596 561 select 0;
#X obj 628 699 r enter-forward;
#X obj 593 608 s enter-forward;
#X obj 693 607 s enter-reverse;
#X obj 645 344 r enter-sleep;
#X obj 659 1071 s enter-sleep;
#X obj 574 1044 s enter-reverse;
#X msg 627 759 1;
#X obj 729 699 r leave-forward;
#X msg 729 759 0;
#X obj 679 1044 s leave-forward;
#X obj 627 729 t b b;
#X obj 1075 987 s \$0-motor-commands;
#X obj 967 790 tgl 25 0 empty empty empty 17 7 0 10 -4160 -262144 -262144
0 1;
#X obj 935 905 spigot;
#X obj 938 675 r \$0-sensor-events;
#X obj 935 932 t s b;
#X obj 914 1010 t b b;
#X obj 914 966 select decreasing steady;
#X obj 997 1009 t b b;
#X obj 998 1067 s enter-sleep;
#X msg 967 762 1;
#X msg 1069 762 0;
#X obj 967 732 t b b;
#X obj 968 702 r enter-reverse;
#X obj 1069 702 r leave-reverse;
#X text 998 796 Reverse State;
#X msg 1075 956 reverse;
#X obj 1018 1040 s leave-reverse;
#X obj 911 1042 s enter-forward;
#X symbolatom 276 285 10 0 0 0 - - -;
#X text 346 285 current motor command;
#X obj 276 261 list;
#X obj 627 829 select 1;
#X msg 628 881 1;
#X msg 660 881 0;
#X obj 966 854 delay 500;
#X obj 966 828 select 1;
#X msg 967 880 1;
#X msg 999 880 0;
#X obj 596 462 random 25;
#X obj 627 855 delay 500;
#X text 199 50 The left-hand column sends commands to the simulator
and processes the noisy sensor signal into a symbolic value representing
increasing \, decreasing \, or steady input.;
#X text 198 97 The right-hand column implements a state machine which
models a simple exploration behavior.;
#X obj 810 222 cnv 15 220 24 empty empty Behavior_State_Machine 20
12 0 14 -260097 -262144 0;
#X obj 159 220 cnv 15 230 24 empty empty Sensor_Signal_Processing 20
12 0 14 -260097 -262144 0;
#X text 199 134 Click on [one_axis_world_sim] to see more details of
the motor and sensor simulator state and modify the world sensor map.
;
#X obj 941 507 loadbang;
#X obj 941 530 s enter-sleep;
#X text 938 489 Start in the sleep state.;
#X text 843 313 This state machine models a simple maximum-seeking
behavior. After sleeping for a random interval \, either the forward
or backward direction is randomly chosen. After a short interval to
allow the motor to start moving \, the input is evaluated. If it is
still increasing \, the direction is maintained (no state change).
If it is decreasing \, the state switches to the opposite direction.
If it is steady \, then the state switches back to sleep.;
#X connect 2 0 7 0;
#X connect 2 0 14 0;
#X connect 3 0 2 0;
#X connect 3 0 83 0;
#X connect 4 0 16 0;
#X connect 4 0 27 0;
#X connect 5 0 4 0;
#X connect 5 1 8 1;
#X connect 5 2 8 0;
#X connect 8 0 4 1;
#X connect 9 0 10 1;
#X connect 9 0 12 1;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 9 1;
#X connect 12 0 5 0;
#X connect 14 0 10 0;
#X connect 14 1 9 0;
#X connect 16 0 6 0;
#X connect 20 0 19 0;
#X connect 21 0 24 0;
#X connect 22 0 25 0;
#X connect 23 0 26 0;
#X connect 24 0 20 0;
#X connect 25 0 20 0;
#X connect 26 0 20 0;
#X connect 27 0 21 0;
#X connect 27 1 28 0;
#X connect 28 0 22 0;
#X connect 28 1 23 0;
#X connect 30 0 34 0;
#X connect 33 0 34 1;
#X connect 34 0 43 0;
#X connect 35 0 84 0;
#X connect 36 0 45 0;
#X connect 38 0 39 0;
#X connect 39 0 50 0;
#X connect 39 1 33 0;
#X connect 42 0 41 0;
#X connect 43 0 91 0;
#X connect 43 1 42 0;
#X connect 44 0 36 0;
#X connect 45 0 48 0;
#X connect 45 1 46 0;
#X connect 46 0 31 0;
#X connect 47 0 57 0;
#X connect 47 1 61 0;
#X connect 48 0 47 0;
#X connect 48 1 49 0;
#X connect 49 0 56 0;
#X connect 49 1 61 0;
#X connect 50 0 51 0;
#X connect 51 0 53 0;
#X connect 51 1 54 0;
#X connect 52 0 62 0;
#X connect 55 0 33 0;
#X connect 58 0 35 0;
#X connect 59 0 60 0;
#X connect 60 0 35 0;
#X connect 62 0 58 0;
#X connect 62 1 46 0;
#X connect 64 0 88 0;
#X connect 65 0 67 0;
#X connect 66 0 65 0;
#X connect 67 0 69 0;
#X connect 67 1 78 0;
#X connect 68 0 80 0;
#X connect 68 1 79 0;
#X connect 69 0 68 0;
#X connect 69 1 70 0;
#X connect 70 0 71 0;
#X connect 70 1 79 0;
#X connect 72 0 64 0;
#X connect 73 0 64 0;
#X connect 74 0 72 0;
#X connect 74 1 78 0;
#X connect 75 0 74 0;
#X connect 76 0 73 0;
#X connect 78 0 63 0;
#X connect 83 0 81 0;
#X connect 84 0 92 0;
#X connect 84 1 86 0;
#X connect 85 0 36 1;
#X connect 86 0 36 1;
#X connect 87 0 89 0;
#X connect 88 0 87 0;
#X connect 88 1 90 0;
#X connect 89 0 65 1;
#X connect 90 0 65 1;
#X connect 91 0 38 0;
#X connect 92 0 85 0;
#X connect 98 0 99 0;
